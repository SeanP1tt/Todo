{"ast":null,"code":"var _jsxFileName = \"/Users/wizehive/Desktop/Todo/src/App.js\";\n\n/*\nSean Pitterson\nTo Do List Application v1.0\nCurrently able to create, select, delete, and edit todo list items\nFuture Additions:\no Settings page to adjust app color layout\no Ability to prioritize list items\no Addition of due dates for list items\no Make list items dragable and sortable\n*/\nimport React, { Component } from 'react';\nimport './App.css';\nimport Todo from './todo.js';\nimport Header from './header.js';\nimport Setting from './settings.js';\nconst initialState = {\n  idCounter: 0,\n  name: '',\n  allSelected: false,\n  showSettings: false,\n  todo: [{\n    id: 0,\n    title: '',\n    description: '',\n    status: false,\n    priority: 0\n  }],\n  presets: [{\n    name: 'preset1',\n    isClicked: false\n  }, {\n    name: 'preset2',\n    isClicked: false\n  }, {\n    name: 'preset3',\n    isClicked: false\n  }, {\n    name: 'preset4',\n    isClicked: false\n  }, {\n    name: 'preset5',\n    isClicked: false\n  }]\n};\nconst cache = localStorage;\nconst key = 'cachedState';\nconst cachedHits = cache.getItem(key);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = cachedHits ? JSON.parse(cachedHits) : initialState;\n\n    this.toggleSettings = () => {\n      let settings = this.state.showSettings;\n      console.log(settings);\n      this.setState({\n        showSettings: !settings\n      });\n    };\n\n    this.addTodo = () => {\n      const todos = this.state.todo;\n      const counter = this.state.idCounter;\n      todos.push({\n        id: counter + 1,\n        status: false\n      });\n      this.setState({\n        todo: todos,\n        idCounter: counter + 1\n      });\n    };\n\n    this.deleteTodo = () => {\n      const todo = this.state.todo.filter(item => item.status !== true);\n      const trueState = {\n        todo,\n        allSelected: false\n      };\n      this.state.allSelected === true ? this.setState(trueState) : this.setState({\n        todo\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.updateTitle = (e, id) => {\n      let value = e.target.value;\n      const list = this.state.todo.map((item, j) => {\n        if (item.id === id) {\n          item.title = value;\n        }\n\n        return item;\n      });\n      this.setState({\n        todo: list\n      });\n    };\n\n    this.updateDescription = (e, id) => {\n      let value = e.target.value;\n      const list2 = this.state.todo.map((item, j) => {\n        if (item.id === id) {\n          item.description = value;\n        }\n\n        return item;\n      });\n      this.setState({\n        todo: list2\n      });\n    };\n\n    this.handleClick = (e, id) => {\n      const list3 = this.state.todo.map((item, j) => {\n        if (item.id === id) {\n          item.status = !item.status;\n        }\n\n        return item;\n      });\n      this.setState({\n        todo: list3\n      });\n    };\n\n    this.selectAll = () => {\n      const list = this.state.todo.map((item, j) => {\n        item.status = !item.status;\n        return item;\n      });\n      this.setState({\n        todo: list,\n        allSelected: !this.state.allSelected\n      });\n    };\n\n    this.swap = (a, b) => {\n      console.log(typeOf(a));\n      let start = this.state.todo.findIndex(e => e.id === a);\n      let end = this.state.todo.findIndex(e => e.id === b);\n      let list = this.state.todo.map(e => e);\n      let pos1 = list[start];\n      list[start] = list[end];\n      list[end] = pos1;\n      this.setState({\n        todo: list\n      }); // console.log([this.state.todo[end] , this.state.todo[start] ]);\n    };\n  }\n\n  //Future Additions:\n  //priority\n  //Sorting/ordering based on priority\n  componentWillUpdate(nextProps, nextState) {\n    cache.setItem(key, JSON.stringify(nextState));\n  } // componentDidUpdate(prevProps, prevState){\n  // if(cachedHits){\n  //\n  // }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.showSettings ? \"sidebar\" : \"hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Setting, {\n      presets: this.state.presets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), \" \"), \" \", React.createElement(\"div\", {\n      className: \"preset1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Header, {\n      name: this.state.name,\n      addTodo: this.addTodo,\n      onChange: this.onChange,\n      deleteTodo: this.deleteTodo,\n      selectAll: this.selectAll,\n      allSelected: this.state.allSelected,\n      class: \"preset1\",\n      toggleSettings: this.toggleSettings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), \" \", React.createElement(Todo, {\n      item: this.state.todo,\n      onChange: this.updateTitle,\n      onUpdate: this.updateDescription,\n      onClick: this.handleClick,\n      class: \"preset1\",\n      swap: this.swap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wizehive/Desktop/Todo/src/App.js"],"names":["React","Component","Todo","Header","Setting","initialState","idCounter","name","allSelected","showSettings","todo","id","title","description","status","priority","presets","isClicked","cache","localStorage","key","cachedHits","getItem","App","state","JSON","parse","toggleSettings","settings","console","log","setState","addTodo","todos","counter","push","deleteTodo","filter","item","trueState","onChange","e","target","value","updateTitle","list","map","j","updateDescription","list2","handleClick","list3","selectAll","swap","a","b","typeOf","start","findIndex","end","pos1","componentWillUpdate","nextProps","nextState","setItem","stringify","render"],"mappings":"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","sourcesContent":["/*\nSean Pitterson\nTo Do List Application v1.0\nCurrently able to create, select, delete, and edit todo list items\nFuture Additions:\no Settings page to adjust app color layout\no Ability to prioritize list items\no Addition of due dates for list items\no Make list items dragable and sortable\n*/\n\nimport React, {\n  Component\n} from 'react';\n\nimport './App.css';\nimport Todo from './todo.js'\nimport Header from './header.js'\nimport Setting from './settings.js'\n\n\nconst initialState = {\n  idCounter: 0,\n  name: '',\n  allSelected: false,\n  showSettings: false,\n  todo: [{\n    id: 0,\n    title: '',\n    description: '',\n    status: false,\n    priority: 0\n  }],\n  presets: [{\n      name: 'preset1',\n      isClicked: false\n    },\n    {\n      name: 'preset2',\n      isClicked: false\n    },\n    {\n      name: 'preset3',\n      isClicked: false\n    },\n    {\n      name: 'preset4',\n      isClicked: false\n    },\n    {\n      name: 'preset5',\n      isClicked: false\n    },\n  ]\n};\nconst cache = localStorage\nconst key = 'cachedState';\nconst cachedHits = cache.getItem(key);\n\nclass App extends Component {\n  state = cachedHits ? JSON.parse(cachedHits) : initialState;\n\n\n  toggleSettings = () => {\n    let settings = this.state.showSettings;\n    console.log(settings);\n    this.setState({\n      showSettings: !settings\n    })\n  }\n\n  addTodo = () => {\n    const todos = this.state.todo;\n    const counter = this.state.idCounter\n    todos.push({\n      id: counter + 1,\n      status: false\n    });\n    this.setState({\n      todo: todos,\n      idCounter: counter + 1\n    })\n  }\n\n  deleteTodo = () => {\n    const todo = this.state.todo.filter((item) => item.status !== true);\n    const trueState = {\n      todo,\n      allSelected: false\n    }\n    this.state.allSelected === true ? this.setState(trueState) : this.setState({\n      todo\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n\n\n  updateTitle = (e, id) => {\n    let value = e.target.value;\n    const list = this.state.todo.map((item, j) => {\n      if (item.id === id) {\n        item.title = value;\n      }\n      return item;\n\n    });\n    this.setState({\n      todo: list\n    })\n  }\n\n  updateDescription = (e, id) => {\n    let value = e.target.value;\n    const list2 = this.state.todo.map((item, j) => {\n      if (item.id === id) {\n        item.description = value;\n      }\n      return item;\n\n    });\n    this.setState({\n      todo: list2\n    })\n  }\n\n\n  handleClick = (e, id) => {\n    const list3 = this.state.todo.map((item, j) => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n      return item;\n    });\n    this.setState({\n      todo: list3\n    })\n  }\n\n  //select all\n  selectAll = () => {\n    const list = this.state.todo.map((item, j) => {\n      item.status = !item.status;\n      return item;\n    });\n    this.setState({\n      todo: list,\n      allSelected: !this.state.allSelected\n    })\n  }\n  //Future Additions:\n  //priority\n  //Sorting/ordering based on priority\n\n  componentWillUpdate(nextProps, nextState) {\n    cache.setItem(key, JSON.stringify(nextState));\n  }\n\n  // componentDidUpdate(prevProps, prevState){\n  // if(cachedHits){\n  //\n  // }\n  // }\n  swap = (a, b) => {\n    console.log(typeOf(a));\n    let start = this.state.todo.findIndex(e => e.id === a);\n    let end = this.state.todo.findIndex(e => e.id === b);\n    let list = this.state.todo.map(e => e);\n    let pos1 = list[start];\n    list[start] = list[end];\n    list[end] = pos1;\n    this.setState({\n      todo: list\n    })\n    // console.log([this.state.todo[end] , this.state.todo[start] ]);\n  }\n\n  render() {\n    return ( <\n      div className = \"App\" >\n      <\n      div className = {\n        this.state.showSettings ? \"sidebar\" : \"hide\"\n      } >\n      <\n      Setting presets = {\n        this.state.presets\n      }\n      /> <\n      /div> <\n      div className = \"preset1\" >\n      <\n      Header name = {\n        this.state.name\n      }\n      addTodo = {\n        this.addTodo\n      }\n      onChange = {\n        this.onChange\n      }\n      deleteTodo = {\n        this.deleteTodo\n      }\n      selectAll = {\n        this.selectAll\n      }\n      allSelected = {\n        this.state.allSelected\n      }\n      class = 'preset1'\n      toggleSettings = {\n        this.toggleSettings\n      }\n      /> <\n      Todo item = {\n        this.state.todo\n      }\n      onChange = {\n        this.updateTitle\n      }\n      onUpdate = {\n        this.updateDescription\n      }\n      onClick = {\n        this.handleClick\n      }\n      class = 'preset1'\n      swap = {\n        this.swap\n      }\n      /> <\n      /div>\n\n\n      <\n      /div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}