{"ast":null,"code":"var _jsxFileName = \"/Users/wizehive/Desktop/Todo/src/toDoItem.js\";\nimport React from 'react';\n\nconst TodoItem = ({\n  identifier,\n  title,\n  description,\n  onChange,\n  onUpdate,\n  status,\n  onClick\n}) => {\n  if (status === true) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: (e, id) => {\n        onChange(e, id);\n      },\n      placeholder: \"Title\",\n      style: {\n        textDecoration: 'line-through'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), \" \", React.createElement(\"textarea\", {\n      value: description,\n      onChange: (e, id) => {\n        onUpdate(e, identifier);\n      },\n      placeholder: \"Description\",\n      rows: \"4\",\n      cols: \"50\",\n      style: {\n        textDecoration: 'line-through'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \" \");\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: (e, id) => {\n        onChange(e, id);\n      },\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      value: description,\n      onChange: (e, id) => {\n        onUpdate(e, identifier);\n      },\n      placeholder: \"Description\",\n      rows: \"4\",\n      cols: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/wizehive/Desktop/Todo/src/toDoItem.js"],"names":["React","TodoItem","identifier","title","description","onChange","onUpdate","status","onClick","e","id","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdC,EAAAA,UADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,WAHc;AAIdC,EAAAA,QAJc;AAKdC,EAAAA,QALc;AAMdC,EAAAA,MANc;AAOdC,EAAAA;AAPc,CAAD,KAQT;AACJ,MAAID,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEP;AACM,MAAA,IAAI,EAAG,MADb;AAEA,MAAA,KAAK,EACHJ,KAHF;AAKA,MAAA,QAAQ,EACN,CAACM,CAAD,EAAIC,EAAJ,KAAW;AACTL,QAAAA,QAAQ,CAACI,CAAD,EAAIC,EAAJ,CAAR;AACD,OARH;AAUA,MAAA,WAAW,EAAG,OAVd;AAWA,MAAA,KAAK,EACH;AACEC,QAAAA,cAAc,EAAE;AADlB,OAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,OAkBJ;AACM,MAAA,KAAK,EACZP,WAFC;AAIH,MAAA,QAAQ,EACN,CAACK,CAAD,EAAIC,EAAJ,KAAW;AACTJ,QAAAA,QAAQ,CAACG,CAAD,EAAIP,UAAJ,CAAR;AACD,OAPA;AASH,MAAA,WAAW,EAAG,aATX;AAUH,MAAA,IAAI,EAAG,GAVJ;AAWH,MAAA,IAAI,EAAG,IAXJ;AAYH,MAAA,KAAK,EACH;AACES,QAAAA,cAAc,EAAE;AADlB,OAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBI,MAAT;AAqCC,GAtCH,MAuCO;AACH,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEP;AACM,MAAA,IAAI,EAAG,MADb;AAEA,MAAA,KAAK,EACHR,KAHF;AAKA,MAAA,QAAQ,EACN,CAACM,CAAD,EAAIC,EAAJ,KAAW;AACTL,QAAAA,QAAQ,CAACI,CAAD,EAAIC,EAAJ,CAAR;AACD,OARH;AAUA,MAAA,WAAW,EAAG,OAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,EAaP;AACS,MAAA,KAAK,EACZN,WAFF;AAIA,MAAA,QAAQ,EACN,CAACK,CAAD,EAAIC,EAAJ,KAAW;AACTJ,QAAAA,QAAQ,CAACG,CAAD,EAAIP,UAAJ,CAAR;AACD,OAPH;AASA,MAAA,WAAW,EAAG,aATd;AAUA,MAAA,IAAI,EAAG,GAVP;AAWA,MAAA,IAAI,EAAG,IAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbO,CAAT;AA2BC;AAEF,CA9EP;;AAgFM,eAAeD,QAAf","sourcesContent":["import React from 'react';\n\nconst TodoItem = ({\n    identifier,\n    title,\n    description,\n    onChange,\n    onUpdate,\n    status,\n    onClick\n  }) => {\n    if (status === true) {\n      return ( < div >\n\n        <\n        input type = 'text'\n        value = {\n          title\n        }\n        onChange = {\n          (e, id) => {\n            onChange(e, id)\n          }\n        }\n        placeholder = 'Title'\n        style = {\n          {\n            textDecoration: 'line-through'\n          }\n        }\n        /> <\n        textarea value = {\n          description\n        }\n        onChange = {\n          (e, id) => {\n            onUpdate(e, identifier)\n          }\n        }\n        placeholder = 'Description'\n        rows = '4'\n        cols = '50'\n        style = {\n          {\n            textDecoration: 'line-through'\n          }\n        }\n        /> <\n        /div>)\n      }\n      else {\n        return ( < div >\n\n          <\n          input type = 'text'\n          value = {\n            title\n          }\n          onChange = {\n            (e, id) => {\n              onChange(e, id)\n            }\n          }\n          placeholder = 'Title' / >\n          <\n          textarea value = {\n            description\n          }\n          onChange = {\n            (e, id) => {\n              onUpdate(e, identifier)\n            }\n          }\n          placeholder = 'Description'\n          rows = '4'\n          cols = '50' / >\n          <\n          /div>)\n        }\n\n      }\n\n      export default TodoItem;\n"]},"metadata":{},"sourceType":"module"}