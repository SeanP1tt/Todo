{"version":3,"sources":["toDoItem.js","checkbox.js","todo.js","header.js","settings.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_ref","identifier","title","description","onChange","onUpdate","status","onClick","react_default","a","createElement","type","value","e","id","placeholder","style","textDecoration","rows","cols","Checkbox","name","checked","Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","buttons","number","class","_this2","item","map","className","key","toDoItem","src_checkbox","Component","Header","addTodo","deleteTodo","selectAll","allSelected","toggleSettings","Settings","initialState","idCounter","showSettings","todo","priority","cache","localStorage","cachedHits","getItem","App","JSON","parse","settings","console","log","setState","todos","counter","push","filter","trueState","target","updateTitle","list","j","updateDescription","list2","handleClick","list3","nextProps","nextState","setItem","stringify","header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43cd8d61.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoItem = ({identifier, title, description, onChange, onUpdate, status, onClick}) => {\n  if(status ===true){\n    return (<div>\n\n    <input type='text' value={title} onChange={(e,id)=> {onChange(e,id)}} placeholder='Title' style={{textDecoration: 'line-through'}}/>\n    <textarea value={description} onChange={(e,id)=> {onUpdate(e,identifier)}} placeholder='Description' rows='4' cols='50' style={{textDecoration: 'line-through'}}/>\n    </div>)\n  } else {\n    return (<div>\n\n    <input type='text' value={title} onChange={(e,id)=> {onChange(e,id)}} placeholder='Title'/>\n    <textarea value={description} onChange={(e,id)=> {onUpdate(e,identifier)}} placeholder='Description' rows='4' cols='50'/>\n    </div>)\n  }\n\n}\n\nexport default TodoItem;\n","import React from 'react';\n\nconst Checkbox = ({identifier, status, onClick}) => {\nreturn (\n<input name=\"status\" type=\"checkbox\" onChange={(id) => {onClick(identifier)}} checked={status} />\n)\n}\n\nexport default Checkbox;\n","import React, {Component} from 'react';\nimport ToDoItem from './toDoItem.js'\nimport Checkbox from './checkbox.js'\n\n//convert back to functional compoenet?\nclass Todo extends Component {\n// const Todo = ({item, onChange}) => {\n//add colors\nconstructor(props) {\n    super(props);\n    this.state = {\n      buttons: [{number:0, class: \"preset1\"}]\n    }\n}\n\nrender(){\n  return (<ul>\n  {\n\n     this.props.item.map((item,id) => (\n       <div className='card' key={'b'+item.id}>\n       <li>\n       <div className='right'>\n       <ToDoItem description={item.description} title={item.title} onChange={(e,id)=> {this.props.onChange(e, item.id)}} onUpdate={(e,id)=> {this.props.onUpdate(e, item.id)}} identifier={item.id} status={item.status}  key={id} />\n       </div>\n       <div className='left'>\n       <Checkbox status={item.status} onClick={(e, id)=>{this.props.onClick(e, item.id)}} identifier={item.id} key={'a'+item.id} />\n       <button><i className=\"fas fa-exclamation\"></i> </button>\n       <button><i className=\"fas fa-exclamation\"></i><i className=\"fas fa-exclamation\"></i>  </button>\n       <button><i className=\"fas fa-exclamation\"></i><i className=\"fas fa-exclamation\"></i><i className=\"fas fa-exclamation\"></i></button>\n       </div>\n       </li>\n       </div>\n   ))\n  }\n  </ul>)\n\n  }\n};\n\n\n\nexport default Todo;\n","import React from 'react';\n\nconst Header = ({name, addTodo, onChange, deleteTodo, selectAll, allSelected, toggleSettings}) => {\n  return (\n    <header>\n    <input name=\"checkall\" type=\"checkbox\" onChange={(id) => {selectAll()}} checked={allSelected} />\n    <input type='text' placeholder='List Name' value={name} onChange={(e)=> {onChange(e)}}/>\n    <button onClick={() => {addTodo()}}><i className=\"fas fa-plus\"></i></button>\n    <button onClick={() => {deleteTodo()}}> <i className=\"fas fa-trash\"></i></button>\n    <button onClick={() => {toggleSettings()}}> <i className=\"fas fa-cogs\"></i></button>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Settings = ({toggleSettings}) => {\nreturn (\n  <div className='settings'>\n  <button>Test Button</button>\n  </div>\n)\n}\n\nexport default Settings\n","/*\nSean Pitterson\nTo Do List Application v1.0\nCurrently able to create, select, delete, and edit todo list items\nFuture Additions:\no Settings page to adjust app color layout\no Ability to prioritize list items\no Addition of due dates for list items\no Make list items dragable and sortable\n*/\n\nimport React, {Component} from 'react';\n\nimport './App.css';\nimport Todo from './todo.js'\nimport Header from './header.js'\nimport Setting from './settings.js'\n\n\nconst initialState= {\n      idCounter:0,\n      name:'',\n      allSelected: false,\n      showSettings:false,\n      todo:[{\n        id:0,\n        title:'',\n        description:'',\n        status: false,\n        priority: 0\n      }]\n};\nconst cache= localStorage\nconst key='cachedState';\nconst cachedHits = cache.getItem(key);\n\nclass App extends Component {\n    state =  cachedHits? JSON.parse(cachedHits) : initialState;\n\n\ntoggleSettings = () => {\n  let settings = this.state.showSettings;\n  console.log(settings);\nthis.setState({\n  showSettings: !settings\n})\n}\n\naddTodo = () =>{\n  const todos = this.state.todo;\n  const counter=this.state.idCounter\n  todos.push({id: counter+1, status:false});\n  this.setState({\n    todo:todos,\n    idCounter:counter+1\n  })\n}\n\ndeleteTodo = () =>{\n  const todo = this.state.todo.filter((item) => item.status !== true);\n  const trueState = {todo,allSelected:false}\n  this.state.allSelected===true? this.setState(trueState):   this.setState({todo})\n}\n\nonChange = (e) => {\n   this.setState({name: e.target.value})\n}\n\n\n\nupdateTitle = (e, id) => {\n  let value = e.target.value;\n  const list = this.state.todo.map((item, j) => {\n    if (item.id === id) {\n      item.title = value;\n    }\n      return item;\n\n  });\n  this.setState({\n        todo:list\n      })\n}\n\nupdateDescription = (e, id) => {\n  let value = e.target.value;\n  const list2 = this.state.todo.map((item, j) => {\n    if (item.id === id) {\n      item.description = value;\n  }\n      return item;\n\n  });\n  this.setState(\n       {\n        todo:list2\n})\n}\n\n\nhandleClick = (e, id) => {\n  const list3 = this.state.todo.map((item, j) => {\n    if (item.id === id) {\n      item.status = !item.status;\n    }\n      return item;\n  });\nthis.setState({\n      todo:list3\n})\n}\n\n//select all\nselectAll = () => {\n  const list = this.state.todo.map((item, j) => {\n      item.status = !item.status;\n      return item;\n    });\n  this.setState({\n        todo:list,\n        allSelected:!this.state.allSelected\n  })\n}\n//Future Additions:\n//priority\n//Sorting/ordering based on priority\n\ncomponentWillUpdate(nextProps, nextState) {\ncache.setItem(key, JSON.stringify(nextState));\n}\n\n// componentDidUpdate(prevProps, prevState){\n// if(cachedHits){\n//\n// }\n// }\n\nrender(){\n  return (\n  <div className=\"App\">\n  <div className={this.state.showSettings?\"sidebar\":\"hide\"}>\n  <Setting />\n  </div>\n    <div className=\"preset1\">\n        <Header name={this.state.name} addTodo={this.addTodo} onChange={this.onChange} deleteTodo={this.deleteTodo} selectAll={this.selectAll} allSelected={this.state.allSelected} class='preset1' toggleSettings={this.toggleSettings}/>\n        <Todo item={this.state.todo} onChange={this.updateTitle} onUpdate={this.updateDescription} onClick={this.handleClick} class='preset1'/>\n    </div>\n\n</div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}